name: Push images to DockerHub

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Push images to DockerHub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Redis
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/redis/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/gsweb-redis:latest

      - name: Build and push RabbitMQ
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/rabbitmq/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/gsweb-rabbitmq:latest

      - name: Build and push SQLServer
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/sqlserver/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/gsweb-sqlserver:latest

      - name: Build and push SEQ
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/seq/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/gsweb-seq:latest

      - name: Build and push Gateway
        uses: docker/build-push-action@v4
        with:
         context: .
         file: ./src/Gateway/GestioneSagre.Gateway/Dockerfile
         push: true
         tags: ${{ secrets.DOCKER_USERNAME }}/gsweb-gateway:latest

      #- name: Build and push WEBAPP
      #  uses: docker/build-push-action@v4
      #  with:
      #    context: .
      #    file: ./src/GestioneSagre.Web.App/Dockerfile
      #    push: true
      #    tags: ${{ secrets.DOCKER_USERNAME }}/gsweb-webapp:latest

      - name: Regenerate environments on Aruba
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
                    bash /docker/gestionesagre/rigeneraAmbiente.sh
